routes <- read.csv("routes.dat", header = FALSE)
head(routes)
colnames(routes) <- c("airline", "airlineID", "sourceAirport", "sourceAirportID", "destinationAirport", "destinationAirportID", "codeshare", "stops", "equipment")
head(routes)
install.packages("plyr")
library(plyr)
?ddply
departures <- ddply(routes, .(sourceAirportID), "nrow")
library(ggmap)
install.packages("ggmap")
map <- get_map(location = "USA", zoom = 3)
library(ggmap)
map <- get_map(location = "USA", zoom = 3)
airports <- read.csv("airports.dat", header = FALSE)
colnames(airports) <- c("ID", "name", "city", "country", "IATA_FAA", "ICAO", "lat", "lon", "altitude", "timezone", "DST")
airports_with_departures <- merge(airports, departures, by.x = "ID", by.y - "sourceAirportID")
airports_with_departures <- merge(airports, departures, by.x = "ID", by.y = "sourceAirportID")
ggmap(map) + geom_point(aes(x = lon, y = lat, size = sqrt(flights)), data = airports_with_departures)
departures <- ddply(routes, .(sourceAirportID), "nrow")
names(departures)[2] <- "flights"
airports_with_departures <- merge(airports, departures, by.x = "ID", by.y = "sourceAirportID")
departures <- ddply(routes, .(sourceAirportID), "flights")
departures <- ddply(routes, .(sourceAirportID), "nrows")
routes <- read.csv("routes.dat", header = FALSE)
colnames(routes) <- c("airline", "airlineID", "sourceAirport", "sourceAirportID", "destinationAirport", "destinationAirportID", "codeshare", "stops", "equipment")
departures <- ddply(routes, .(sourceAirportID), "nrows")
departures <- ddply(routes, .(sourceAirportID), "nrow")
names(departures)[2] <- "flights"
airports_with_departures <- merge(airports, departures, by.x = "ID", by.y = "sourceAirportID")
ggmap(map) + geom_point(aes(x = lon, y = lat, size = sqrt(nrow)), data = airports_with_departures)
ggmap(map) + geom_point(aes(x = lon, y = lat, size = sqrt(flights)), data = airports_with_departures)
ggmap(map) + geom_point(aes(x = lon, y = lat, size = sqrt(flights)), data = airports_with_departures, alpha = 0.25)
?get_map
map <- get_map(location = "USA", maptype = "roadmap", zoom = 3)
ggmap(map) + geom_point(aes(x = lon, y = lat, size = sqrt(flights)), data = airports_with_departures, alpha = 0.25)
map <- get_map(location = "USA", source = "osm", maptype = "roadmap", zoom = 3)
ggmap(map) + geom_point(aes(x = lon, y = lat, size = sqrt(flights)), data = airports_with_departures, alpha = 0.25)
install.packages("rmaps")
install.packages("googleVis")
install.packages("sp")
polygons
?spplot
??spplot
demo(googleVis)
library(googleVis)
demo(googleVis)
AndrewMap <- gvisMap(Andrew, "LatLong", "Tip",                      options = list(showTip = TRUE,                                   showLine = TRUE,                                   enableScrollWheel = TRUE,                                   mapType = 'terrain',                                   useMapTypeControl = TRUE)) plot(AndrewMap)
?gvismap
?gvisMap
andrew <- Andrew
airportMap <- gvisMap(airports_with_departures, "lat:lon", "IATA_FAA",                       options = list(showTip = TRUE,                                      enableScrollWheel = TRUE,                                      mapType = 'terrain',                                      useMapTypeControl = TRUE))
airportMap <- gvisMap(airports_with_departures, "latlon", "IATA_FAA",                       options = list(showTip = TRUE,                                      enableScrollWheel = TRUE,                                      mapType = 'terrain',                                      useMapTypeControl = TRUE))
name(airportMap)[6] <- "Lat"
name(airports_with_departures)[6] <- "Lat"
names(airports_with_departures)[6] <- "Lat"
names(airports_with_departures)[7] <- "Lat"
names(airports_with_departures)[8] <- "Long"
airports_with_departures <- merge(airports, departures, by.x = "ID", by.y = "sourceAirportID")
airports_with_departures$LatLong <- airports_with_departures$lat + ':' + airports_with_departures$lon
3 + ':' + 3
toString(3) + ':' + toString(4)
paste(3, 3, ':')
paste(3, 3, sep = ':')
airports_with_departures$LatLong <- paste(airports_with_departures$lat, airports_with_departures$lon, sep = ':')
airportMap <- gvisMap(airports_with_departures, "LatLong", "IATA_FAA",                       options = list(showTip = TRUE,                                      enableScrollWheel = TRUE,                                      mapType = 'terrain',                                      useMapTypeControl = TRUE))
plot(airportMap)
dim(airports_with_departures)
?gvismap
?gvisMap
airportMap <- gvisGeoChart(airports_with_departures, "LatLong", sizevar = "flights",                       options = list(showTip = TRUE,                                      enableScrollWheel = TRUE,                                      mapType = 'terrain',                                      useMapTypeControl = TRUE))
plot(airportMap)
airports_with_departures$SizeOfMarker <- sqrt(airports_with_departures$flights)
airportMap <- gvisGeoChart(airports_with_departures, "LatLong", sizevar = "SizeOfMarker",                       options = list(showTip = TRUE,                                      enableScrollWheel = TRUE,                                      mapType = 'terrain',                                      useMapTypeControl = TRUE))
plot(airportMap)
airportMap <- gvisMap(airports_with_departures, "LatLong", "IATA_FAA",                       options = list(showTip = TRUE,                                      enableScrollWheel = TRUE,                                      mapType = 'terrain',                                      useMapTypeControl = TRUE))
plot(airportMap)
?gvisMap
?ggmap
version
?gg
?ggmap
?gvisMap
version
airports <- read.csv("airports.dat", header = FALSE)
colnames(airports) <- c("ID", "name", "city", "country", "IATA_FAA", "ICAO", "lat", "lon", "altitude", "timezone", "DST")
routes <- read.csv("routes.dat", header = FALSE)
colnames(routes) <- c("airline", "airlineID", "sourceAirport", "sourceAirportID", "destinationAirport", "destinationAirportID", "codeshare", "stops", "equipment")
library(plyr)
departures <- ddply(routes, .(sourceAirportID), "nrow")
names(departures)[2] <- "flights"
airports_with_departures <- merge(airports, departures, by.x = "ID", by.y = "sourceAirportID")
library(ggmap)
install.packages("ggmap")
install.packages("plyr")
install.packages("googleVis")
install.packages("sp")
library(ggmap)
library(ggmap)
